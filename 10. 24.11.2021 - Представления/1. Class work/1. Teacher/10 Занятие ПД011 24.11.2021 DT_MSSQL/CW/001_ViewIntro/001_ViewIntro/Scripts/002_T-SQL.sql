
-- T-SQL - скриптовый язык   Transact SQL
-- Переменные, объявление переменных

-- declare @имяПеременной тип
-- declare @имяПеременной1 тип1, @имяПеременной2 тип2

-- длина имени переменной до 128 символов
-- имена переменных и др. объектов - регистронезависимые

-- объявление переменной с инициализацией
declare @A int = 1;
declare @name nvarchar(80) = N'Сеня Серый', @age int = 3, @weight float = 5.56

-- выборка переменных - "вывод" переменных
select @A as a, @name as name, @age as age, @weight as weight

-- присваивание
-- set @имя = выражение
-- select @имя1 = выражение1, @имя2 = выражение2, ...
-- select @имя = (запрос)

set @a = 23
select @name = N'Вася', @age = 5, @weight = 4
select @A as a, @name as name, @age as age, @weight as weight

-- результат запроса - в переменную @id_intent
-- и эту переменную использовать в следующем запросе
declare @idItem int  = 2
declare @item nvarchar(60)
select @item = (select item from Goods where Id = @idItem)
print @item;  -- вывод переменной в панель сообщений
go               -- выполнение пакета операторов T-SQL

declare @idPerson int  = 8
select
    *
from
    Persons
where
    Id > @idPerson -- применение переменной в запросе
go

-- локальные переменные уничтожаются после каждого go
-- print @id_user;

-- вывод переменных в консоль
-- print выражение
-- raiserror(формат, уровеньОшибки, состояниеОшибки, списокЗначений)
-- формат - строка формата, похожа на C-форматную строку
-- %s - строка
-- %d - число со знаком
-- %u - число без знака

declare @id_person int = 5;
declare @passport nvarchar(20) = N'12 22 567890';
-- print N'print может и строки выводить ' + str(@id_person, 5)
print N'print может и строки выводить ' + ltrim(str(@id_person, 5))
print +N'100' +  @id_person
print @id_person + +N'100' -- операция унарного плюс делает из строки число
print @id_person + N'100'
raiserror(N'Идентификатор для паспорта "%s" равен %d', 0, 1, @passport, @id_person)
go

/* 
   Функции T-SQL
   ☼ агрегатные (5 стандартных avg(), count(), sum(), min(), max() и не стандартные ...)
   ☼ встроенные скалярные функции (возвращающие одно значение, есть также табличные
     функции, которые возвращают таблицы, скажем о них позже)
	 ► математические sin(), cos(), pow(), exp(), ...
	 ► строковые функции str(), substr(), ltrim(), rtrim(), ...
	   str(@имяПеременной, ширинаПоляВывода, знаковВДробнойЧасти)
     ► разные функции, например rand(), ...
   ☼ хранимые функции - функции, определяемые пользователем

---------------------------- операторы арифметические и логические, другие --------------

☼ арифметические операции
  унарный -  смена знака  set @a = -@a
  унарный +  
  бинарные операции  * / + - %   типичный набор операций
  += -= *= /= %=

☼ конкатенация строк +

☼ логические операции:
  not                   отрицание
  and                   и
  or                    или
  between ... and ...   между ... и ...

☼ операции сравнения
  <   меньше
  <=  меньше или равно или !> (не больше)
  >   больше
  >=  больше или равно или !< (не меньше)
  =   равно
  <> !=  не равно

Управляющие операторы

☼ блок операторов        begin end
☼ операторы ветвления    if    if else    case
☼ оператор повторения    while 
☼ операторы переходов    goto   break   continue

Блок операторов 
begin
    оператор1
	оператор2
	...
	операторN 
end

Ветвление
if условие
   оператор1

if условие
   оператор1
else
   оператор2

*/
-- определение минимального и максимальлного из двух чисел
go
declare @a int = -100 + 200*rand();
declare @b int = -100 + 200*rand();
declare @min int, @max int;

if @a < @b begin   -- логика решения
   set @min = @a;
   set @max = @b;
end else begin
   set @min = @b;
   set @max = @a;
end;

-- вывод результата, char(10) это символ перевода строки, 
-- char(9) - символ табуляции
select @a as 'a', @b as 'b', @min as 'min', @max as 'max'; -- вывод в область результатов
print N'результат:' + char(10) +                           -- вывод в область сообщений
      char(9) + 'a = ' + ltrim(str(@a)) + char(10) +
      char(9) + 'b = ' + ltrim(str(@b)) + char(10) + 
      char(9) + 'min = ' + ltrim(str(@min)) + char(10) +
      char(9) + 'max = ' + ltrim(str(@max));
go
