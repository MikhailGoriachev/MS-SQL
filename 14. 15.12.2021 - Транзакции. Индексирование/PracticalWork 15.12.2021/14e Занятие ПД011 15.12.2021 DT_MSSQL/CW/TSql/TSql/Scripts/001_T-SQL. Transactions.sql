/* 
Транзакции в SQL. Транзакции в T-SQL
T-SQL --> Transact SQL

Транзакция - исполнение действия такое, что оно либо полностью
принимается (commit) либо полностью отвергается (rollback, откат) 

Основные свойства транзакций - ACID
☼ Atomicity   - атомарность транзакции, неделимость, все или ничего
☼ Consistency - связность данных, при любом исходе транзакции связность, целостность
                данных не нарушается
☼ Isolation   - изолированность, транзакции не взаимодействуют между собой
☼ Durability  - надежность, выполнение транзакции не зависит от внешних факторов.
                Даже при аварийном отключении питания данные не должны пострадать.

Три вида транзакций в T-SQL
a) автоматическая транзакция
b) явная транзакция
c) неявная транзакция

транзакции распространяются на операторы: insert, select, update, delete

Автоматическая транзакция - каждая операция insert, select, update, delete
по умолчанию выполняется как отдельная транзакция

Явные транзакции - в транзакцию надо включить > 1 оператора. 
Часть кода, входящая в транзакцию оформляется, ограничивается
специальными операторами

begin transaction имяТранзакции   или    begin tran имяТранзакции   -- начало транзакции
commit transction имяТранзакции   или    commit tran имяТранзакции  -- принятие транзакции
rollback transction               или    rollback tran              -- откат транзакции

схема обработки транзакции
при помощи анализа @@error принимается или откатывается транзакция
системная переменная @@error - результат выполнения последней операции
@@error == 0  Ok
@@error != 0  ошибка

if @@error = 0 
   commit tran
else
   rollback tran 
   
неявная транзакция
отдельный режим, включающийся/выключающийся отдельной командой, отличается от двух
рассмотренных режимов, смысл:
► каждая операция начинается как транзакция
► транзакция завершается явно операторами commit, rollback

включение этого режима
set implicit_transactions on      

выключение этого режима
set implicit_transactions off    

‼ есть очень много вариантов команды set ‼          

-- автоматическая транзакция - каждая команда образует свою транзакцию
delete from Clients where Passport like 'НО12%'

-- операция не проходит
insert into Clients (Family, Name, Patronimyc, Passport) values
    ('Васильев', 'Петр', 'Степанович Степанович Степанович Степанович Степанович', 'НО123456')

- операция проходит
insert into Clients (Surname, Name, Patronymic, Passport, PercentDiscount) values
    ('Совиных', 'Алина', 'Олеговна', 'НО123457', 0.3)
print @@error
-----------------------------------------------------------

begin transaction    -- начало транзакции 

-- для хранения кодов завершения операций
declare @err1 int, @err2 int

-- не контролируемая операция, т.к. не сохраняем @@error
delete from Clients where Passport like 'НО12%'

-- первая контролируемая операция, т.к. сохраняем @@error
insert into Clients (Surname, Name, Patronymic, Passport, PercentDiscount) values
	('Васильев', 'Петр', 'Степанович Степанович Степанович Степанович Степанович', 'НО123456', 0.1)
set @err1 = @@error

-- вторая контролируемая операция, т.к. сохраняем @@error
insert into Clients (Surname, Name, Patronymic, Passport, PercentDiscount) values
	('Иванова', 'Алина', 'Олеговна', 'НО123457', 0.3)
set @err2 = @@error

-- принятие решения о судьбе транзакции
if @err1 = 0 and @err2 = 0 begin
   print 'Операции успешно завершены'
   commit tran
end else begin
   print 'Операции отклонены'
   rollback tran
end

------------------------------------------------

Точка сохранения транзакции

Механизм сохранения промежуточного состояния транзакции.
М.б. больше одной точки сохранения

сохранить промежуточное состояние транзакции в точке сохранения
save transaction имяТочкиСохранения

откатить транзакцию до точки сохранения
rollback transaction имяТочкиСохранения

Пример:

begin transaction    -- начало транзакции 

-- для хранения кодов завершения операций
declare @err1 int, @err2 int

-- не контролируемая операция
delete from Clients where Passport like 'НО12%'

-- первая контролируемая операция
insert into Clients (Family, Name, Patronimyc, Passport) values
	('Совиных', 'Алина', 'Олеговна', 'НО123457')
set @err1 = @@error

-- сохранить промежуточное состояние транзакции в точке сохранения
save transaction SaveTP  

-- вторая контролируемая операция
insert into Clients (Family, Name, Patronimyc, Passport) values
	('Васильев', 'Петр', 'Степанович Степанович Степанович Степанович Степанович', 'НО123456')
set @err2 = @@error

-- принятие решения о судьбе транзакции
if @err1 = 0 and @err2 = 0 begin
   print 'Операции успешно завершены'
   commit tran
end else begin
   print 'Операции отклонены, откат до точки сохранения SaveTP'
   rollback tran SaveTP
end

------------------------------------------------------------

Вложенные транзакции
Явное начало транзакции внутри другой явной транзакции

Важно!
commit работает только для соответствующего begin tran
rollback работает для всех begin tran, т.е. откат любой транзакции -
откат всех транзакций
*/

set implicit_transactions off;

begin transaction    -- начало транзакции 

-- для хранения кодов завершения операций
declare @err1 int, @err2 int;

-- не контролируемая операция
delete from Details where FamIO in (N'Иванов И.И.', N'Петров П.П.');


-- первая контролируемая операция
insert into Details (FamIO, Age) values
	(N'Петров П.П.', 34);
set @err1 = @@error;
select @err1 as err1, null as err2;

-- @@identity - последний автосгенерированный идентификатор
print N'Выполнена вставка записи с идентификатором ' + convert(nvarchar, @@identity);

save transaction SaveTP;  -- сохранить промежуточное состояние транзакции в точке сохранения

-- вторая контролируемая операция
insert into Details (FamIO, Age) values
	(N'Иванов-Иванов-Иванов-Иванов-Иванов-Иванов-Иванов-Иванов-Иванов-Иванов-Иванов И.И.', 42)
	-- (N'Иванов И.И.', 42)
set	@err2 = @@error;
select @err1 as err1, @err2 as err2;

-- @@identity - последний автосгенерированный идентификатор
print N'Выполнена вставка записи с идентификатором ' + convert(nvarchar, @@identity);

-- принятие решения о судьбе транзакции
if @err1 = 0 and @err2 = 0 begin
   print N'Операции успешно завершены';
   commit tran;
end else if @err1 = 0 and @err2 <> 0 begin  -- <> !=    !< >=     !> <= 
   print N'Операции отклонены, откат до точки сохранения SaveTP';
   rollback tran SaveTP;
end else begin
   print N'Операции отклонены, откат транзакции';
   rollback tran;
end

-- сервисный запрос, т.к. окно выполнения блокирует операции
-- с таблицей до своего закрытия
select * from Details;
go
